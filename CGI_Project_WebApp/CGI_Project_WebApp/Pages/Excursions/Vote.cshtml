@page
@{
    ViewData["Title"] = @stringLocalizer["VoteTitle"];
}
@Html.AntiForgeryToken()
@using CGI_Project_WebApp_Models
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.Extensions.Localization;
@inject IStringLocalizer<IndexModel> stringLocalizer;

@model CGI_Project_WebApp.Pages.Excursions.VoteModel
<head>
    <link rel="stylesheet" href="~/css/vote.css" />
</head>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.7.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-Ze54fzpCFBGZGqoWnOZK2A2w+2l+rWix7N6dqvFvl6lO5Ov4E5l1QqnbFz3I4h4" crossorigin="anonymous"></script>

@if (TempData["Success"] != null)
{
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
        <div id="successToast" class="toast show bg-success d-flex" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true">
            <div class="toast-body text-light">
                @stringLocalizer[@TempData["Success"].ToString()]
            </div>
        </div>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 11">
        <div id="errorToast" class="toast show bg-danger d-flex" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true">
            <div class="toast-body text-light">
                @stringLocalizer[@TempData["Error"].ToString()]
            </div>
        </div>
    </div>
}
<div id="vote-wrapper" class="container mt-4 mb-5">
    <div class="vote-header">
        <h3 class="hero-title">@stringLocalizer["VoteTitle"]</h3>
        @* <h5 class="subtitle">@stringLocalizer["VoteSubtitle"]</h5> *@
        </div>

    @{
        @if(Model.poll == null){
            <p>no active poll found</p>
        }else{

        var poll = Model.poll;
        var (hasVoted, vote) = Model.PollContainsUserVote(poll.Id);



        var sortedSuggestions = poll.PollSuggestions.OrderByDescending(s => s.Votes.Count);

        @foreach (var suggestion in sortedSuggestions)
        {
            var userVotedForSuggestion = hasVoted && vote.PollSuggestion.Id == suggestion.Id;

            <div class='vote-card mb-3 @(userVotedForSuggestion ? "voted-div" : "")' data-id="@suggestion.Id">
                <form method="post" asp-page-handler="Vote" asp-route-suggestionId="@suggestion.Id">
                    <div class="card">
                        <div class="row g-0">
                            <div class="col-md-9">
                                <div class="card-body">
                                    <h5 class="card-title">@suggestion.Suggestion.Name</h5>
                                    <p class="card-text">@suggestion.Suggestion.Description</p>
                                </div>
                            </div>
                            <div class="col-md-3 d-flex align-items-center justify-content-center bg-light">
                                <div class="card-body text-center">
                                    <button type="submit" @(userVotedForSuggestion ? "disabled" : "") class='@(hasVoted ? "hidden" : "") btn hero-button text-white rounded-1 border-0 btn-lg'>@stringLocalizer["BtnVote"]</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        }

        @foreach (var suggestion in sortedSuggestions)
        {
            var optionName = suggestion.Suggestion.Name;
            var suggestionId = (int)suggestion.SuggestionId;
            //int tmp = sugg

            var voteCount = Model.Votes.Where(v => v.PollSuggestion.SuggestionId == suggestion.SuggestionId).Count();

            var percentage = (int)((float)100.0f / Model.Votes.Count() * voteCount);
            <div class="container my-4 mt-4">
                <div class="row">
                    <div class="col-md-12 p-0 m-0">
                        <div class="d-flex align-items-center mb-3">
                            <div class="col-3">
                                <span>@optionName</span>
                            </div>
                            <div class="col-8">
                                <div class="progress mx-2 vote-progress-bar-container" data-percentage="@(percentage.ToString("0.##"))">
                                    <div class="progress-bar vote-progress-bar" role="progressbar">
                                        <p class="vote-progess-percentage m-0">@percentage.ToString("0.#")%</p>

                                        <script>
                                            var votePercentages = @Html.Raw(Json.Serialize(Model.VotePercentages));
                                            //console.log("Vote Percentages:", votePercentages);
                                        </script>
                                    </div>
                                </div>
                            </div>
                            <div class="col-1 d-flex justify-content-end">
                                <div class="badge bg-primary w-100">@voteCount</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <script>
                // Assuming you have jQuery available
                $(document).ready(function () {
                    // Select the progress bar by its class and update its width
                    $(".vote-progress-bar").last().css("width", "@(percentage.ToString("0.##"))%");
                });
            </script>
        }



        <script src="../js/vote.js"></script>


    }
    }
    

