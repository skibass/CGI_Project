@page
@{
    ViewData["Title"] = "Vote";
}
@using CGI_Project_WebApp_Models
@model CGI_Project_WebApp.Pages.Excursions.VoteModel
<head>
    <link rel="stylesheet" href="~/css/vote.css"/>
</head>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.7.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-Ze54fzpCFBGZGqoWnOZK2A2w+2l+rWix7N6dqvFvl6lO5Ov4E5l1QqnbFz3I4h4" crossorigin="anonymous"></script>

<div id="vote-wrapper" class="container mt-4 mb-5">
    <div class="vote-header">
        <h3 class="hero-title">Vote for an excursion</h3>
        <h5 class="subtitle">You can vote for one excursion in each period</h5>
    </div>

    @foreach (var poll in Model.Polls)
    {
        <div data-bs-toggle="collapse" href="#collapse@(poll.Id)" aria-controls="collapse@(poll.Id)" class="vote-item d-flex mb-2 rounded-2 justify-content-between align-items-center" onclick="changeChevron(event)">
            <a class="text-decoration-none hero-title d-flex lh-1 fs-6 text-white p-2">@poll.Poll_name</a>
            <div class="chevron down mx-3 align-self-center"></div>
        </div>

        <div id="collapse@(poll.Id)" class="vote-collection collapse">
            @foreach (var suggestion in poll.PollSuggestions)
            {
                var optionName = suggestion.Suggestion.Name;
                var suggestionId = (int)suggestion.SuggestionId;
                var percentage = Model.VotePercentages.GetValueOrDefault(suggestionId, 0);
                var voteCount = Model.VoteCounts.GetValueOrDefault(suggestionId, 0);

                <div class="container my-4 mt-4">
                    <div class="row">
                        <div class="col-md-12 p-0 m-0">
                            <div class="d-flex align-items-center mb-3">
                                <div class="col-2">
                                    <span>@optionName</span>
                                </div>
                                <div class="col-9">
                                    <div class="progress mx-2 vote-progress-bar-container" data-percentage="@(percentage.ToString("0.##"))">
                                        <div class="progress-bar" role="progressbar">
                                            <p>@percentage.ToString("0.##")</p>
                                            <script>
                                                var votePercentages = @Html.Raw(Json.Serialize(Model.VotePercentages));
                                                console.log("Vote Percentages:", votePercentages);
                                            </script>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-1 d-flex justify-content-end">
                                    <div class="badge bg-primary w-100">@voteCount</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <script>
                    // Assuming you have jQuery available
                    $(document).ready(function () {
                        // Select the progress bar by its class and update its width
                        $(".vote-progress-bar").last().css("width", "@(percentage.ToString("0.##"))%");
                    });
                </script>
            }
        </div>
    }
</div>

<script>
    var changeChevron = function (event) {
        var container = $(event.target).closest('.vote-item');
        var chevron = container.find('.chevron.down');
        chevron.toggleClass('up');
    }

    $(document).ready(function () {
        $('[data-bs-toggle="collapse"]').collapse();

        $(".vote-progress-bar-container").each(function () {
            var percentage = parseFloat($(this).data("percentage"));
            var progressBar = $(this).find(".progress-bar");

            // Check if the percentage is a valid number
            if (!isNaN(percentage)) {
                progressBar.css("width", percentage + "%");
            }
        });
    });

    var votePercentages = @Html.Raw(Json.Serialize(Model.VotePercentages));

    // Update progress bars based on the calculated percentages
    Object.keys(votePercentages).forEach(function (suggestionId) {
        var percentage = votePercentages[suggestionId];
        var progressBar = document.getElementById("progress-bar-" + suggestionId);
        progressBar.style.width = percentage + "%";
        progressBar.innerHTML = percentage.toFixed(2) + "%";
    });
</script>