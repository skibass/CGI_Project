<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPhotoNav" xml:space="preserve">
    <value>Add photos</value>
  </data>
  <data name="AddProfilePhoto" xml:space="preserve">
    <value>Add profile picture</value>
  </data>
  <data name="BtnVote" xml:space="preserve">
    <value>Vote</value>
  </data>
  <data name="ErrorAllFieldsRequired" xml:space="preserve">
    <value>Please ensure all fields are filled in</value>
  </data>
  <data name="ErrorInvalidFormSubmission" xml:space="preserve">
    <value>The form submission is invalid</value>
  </data>
  <data name="ErrorPollPeriodConflict" xml:space="preserve">
    <value>The voting period for this poll conflicts with an existing poll's period</value>
  </data>
  <data name="ErrorUserNotFoundOrServerError" xml:space="preserve">
    <value>User not found, or a server error occurred</value>
  </data>
  <data name="ExcursionDescription" xml:space="preserve">
    <value>Excursion description</value>
  </data>
  <data name="ExcursionInfo" xml:space="preserve">
    <value>Important info (e.g. bring sunglasses)</value>
  </data>
  <data name="ExcursionLocation" xml:space="preserve">
    <value>Excursion location</value>
  </data>
  <data name="ExcursionName" xml:space="preserve">
    <value>Excursion name</value>
  </data>
  <data name="FooterContactUs" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="FooterMore" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="HeroButton" xml:space="preserve">
    <value>Get started</value>
  </data>
  <data name="HeroSubtitle" xml:space="preserve">
    <value>Make a suggestion</value>
  </data>
  <data name="HeroTitle" xml:space="preserve">
    <value>Unlock Team Adventures: Building Bonds, One Excursion at a Time. Discover, Bond, and Thrive with Every Corporate Expedition!</value>
  </data>
  <data name="HomePageTitle" xml:space="preserve">
    <value>Homepage</value>
  </data>
  <data name="LeaderboardName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="LeaderboardNav" xml:space="preserve">
    <value>Leaderboard</value>
  </data>
  <data name="LeaderboardPosition" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="LeaderboardScore" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="LeaderboardTitle" xml:space="preserve">
    <value>Leaderboard</value>
  </data>
  <data name="Legal" xml:space="preserve">
    <value>Legal</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="ModelEmailErrorKey" xml:space="preserve">
    <value>E-mail does not exist and/or server error</value>
  </data>
  <data name="ModelErrorKey" xml:space="preserve">
    <value>Suggestion is invalid</value>
  </data>
  <data name="ModelSuggestErrorKey" xml:space="preserve">
    <value>Failed to add suggestion. Suggestion might exist already</value>
  </data>
  <data name="ModelSuggestKey" xml:space="preserve">
    <value>Suggestion added successfully</value>
  </data>
  <data name="NavPoll" xml:space="preserve">
    <value>Poll</value>
  </data>
  <data name="PhotoFormAdd" xml:space="preserve">
    <value>Add photo to album</value>
  </data>
  <data name="PhotoFormDesc" xml:space="preserve">
    <value>Add a description</value>
  </data>
  <data name="PhotoFormLabel1" xml:space="preserve">
    <value>Select photo or drag and drop</value>
  </data>
  <data name="PhotoFormLabel2" xml:space="preserve">
    <value>Drag and drop your file here, or click to select file</value>
  </data>
  <data name="PhotoInvalid" xml:space="preserve">
    <value>Photo type is not valid, please select a valid photo</value>
  </data>
  <data name="PhotoSuccess" xml:space="preserve">
    <value>Photo has been added successfully</value>
  </data>
  <data name="PhotoTooLarge" xml:space="preserve">
    <value>Photo is too large, please select a smaller photo</value>
  </data>
  <data name="PollAlert" xml:space="preserve">
    <value>You can only select a maximum of 3 excursions</value>
  </data>
  <data name="PollName" xml:space="preserve">
    <value>Poll name</value>
  </data>
  <data name="PollNoSuggestions" xml:space="preserve">
    <value>No suggestions have been done, ask your employees to make suggestions</value>
  </data>
  <data name="PollRange" xml:space="preserve">
    <value>Select the period in which employees can vote</value>
  </data>
  <data name="PollTitle" xml:space="preserve">
    <value>Poll</value>
  </data>
  <data name="PrivacyPolicy" xml:space="preserve">
    <value>Privacy policy</value>
  </data>
  <data name="ProfileDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ProfileException" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="ProfileLocation" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="ProfileNoSuggestions" xml:space="preserve">
    <value>No suggestions available</value>
  </data>
  <data name="ProfileNoTeam" xml:space="preserve">
    <value>No team information available</value>
  </data>
  <data name="ProfileTeam" xml:space="preserve">
    <value>Team</value>
  </data>
  <data name="ProfileTitle" xml:space="preserve">
    <value>User Profile</value>
  </data>
  <data name="ProfileVotes" xml:space="preserve">
    <value>Votes</value>
  </data>
  <data name="ProfileYourSuggestions" xml:space="preserve">
    <value>Your Suggestions</value>
  </data>
  <data name="ReadMore" xml:space="preserve">
    <value>Read more</value>
  </data>
  <data name="RecentTitle" xml:space="preserve">
    <value>Recent Excursions</value>
  </data>
  <data name="SelectPollSuggestion" xml:space="preserve">
    <value>Select a suggestion</value>
  </data>
  <data name="SelectProfilePhoto" xml:space="preserve">
    <value>Select photo</value>
  </data>
  <data name="ShowPhotoNav" xml:space="preserve">
    <value>Show photos</value>
  </data>
  <data name="Social" xml:space="preserve">
    <value>Social media</value>
  </data>
  <data name="SuccessPollCreated" xml:space="preserve">
    <value>Poll created successfully</value>
  </data>
  <data name="SuggestNav" xml:space="preserve">
    <value>Suggest</value>
  </data>
  <data name="SuggestSubmit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SuggestSubtitle" xml:space="preserve">
    <value>Fill out the form below</value>
  </data>
  <data name="SuggestTitle" xml:space="preserve">
    <value>Suggest an excursion</value>
  </data>
  <data name="VoteError" xml:space="preserve">
    <value>Could not vote</value>
  </data>
  <data name="VoteNav" xml:space="preserve">
    <value>Vote</value>
  </data>
  <data name="VoteSubtitle" xml:space="preserve">
    <value>You can vote for one excursion in each period</value>
  </data>
  <data name="VoteSuccess" xml:space="preserve">
    <value>Successfully voted, submitted by</value>
  </data>
  <data name="VoteTitle" xml:space="preserve">
    <value>Vote for an excursion</value>
  </data>
  <data name="WelcomeManager" xml:space="preserve">
    <value>Welcome manager</value>
  </data>
  <data name="WelcomeUser" xml:space="preserve">
    <value>Welcome</value>
  </data>
</root>